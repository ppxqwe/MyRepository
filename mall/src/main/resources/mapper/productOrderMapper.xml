<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- product_order -->
<mapper namespace="com.ppx.mall.dao.ProductOrderDao">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="productOrderMap" type="ProductOrder">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="userId" property="userId" jdbcType="VARCHAR" />
        <result column="productId" property="productId" jdbcType="BIGINT" />
        <result column="price" property="price" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="telephone" property="telephone" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->

    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        po.id, po.createTime, po.userId, po.productId, po.price, po.address, po.telephone, po.name
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->

    <!-- 查询所有 -->
    <select id="findProductOrderAll" resultMap="productOrderMap">
        SELECT
            <include refid="allColumns" />
        FROM product_order po
    </select>

    <!-- 根据条件参数查询列表 -->
    <select id="findProductOrderByCondition" resultMap="productOrderMap" parameterType="map">
        SELECT
            <include refid="allColumns" />
        FROM product_order po WHERE 1 = 1
        <if test="createTime != null">
            AND po.createTime = #{createTime}
        </if>
        <if test="userId != null and userId != ''">
            AND po.userId LIKE CONCAT('%', #{userId}, '%')
        </if>
        <if test="productId != null">
            AND po.productId = #{productId}
        </if>
        <if test="price != null">
            AND po.price = #{price}
        </if>
        <if test="address != null and address != ''">
            AND po.address LIKE CONCAT('%', #{address}, '%')
        </if>
        <if test="telephone != null and telephone != ''">
            AND po.telephone LIKE CONCAT('%', #{telephone}, '%')
        </if>
        <if test="name != null and name != ''">
            AND po.name LIKE CONCAT('%', #{name}, '%')
        </if>
    </select>

    <!-- 根据主键查询信息 -->
    <select id="findProductOrderByIds" resultMap="productOrderMap" parameterType="list">
        SELECT
            <include refid="allColumns" />
        FROM product_order po WHERE po.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- 新增信息 -->
    <insert id="addProductOrder" parameterType="ProductOrder">
        INSERT INTO product_order (
            id, createTime, userId, productId, price, address, telephone, name
        ) VALUES (
            #{id},
            #{createTime},
            #{userId},
            #{productId},
            #{price},
            #{address},
            #{telephone},
            #{name}
        )
    </insert>

    <!-- 批量新增信息 -->
    <insert id="addProductOrders" parameterType="list">
        INSERT INTO product_order (
            id, createTime, userId, productId, price, address, telephone, name
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.createTime},
                #{item.userId},
                #{item.productId},
                #{item.price},
                #{item.address},
                #{item.telephone},
                #{item.name}
            )
        </foreach>
    </insert>

    <!-- 修改信息 -->
    <update id="updateProductOrder">
        UPDATE product_order
        <set>
            <if test="createTime != null">
                createTime = #{createTime},
            </if>
            <if test="userId != null">
                userId = #{userId},
            </if>
            <if test="productId != null">
                productId = #{productId},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="telephone != null">
                telephone = #{telephone},
            </if>
            <if test="name != null">
                name = #{name}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 批量修改信息 -->
    <update id="updateProductOrders" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE product_order
            <set>
                <if test="item.createTime != null">
                    createTime = #{item.createTime},
                </if>
                <if test="item.userId != null">
                    userId = #{item.userId},
                </if>
                <if test="item.productId != null">
                    productId = #{item.productId},
                </if>
                <if test="item.price != null">
                    price = #{item.price},
                </if>
                <if test="item.address != null">
                    address = #{item.address},
                </if>
                <if test="item.telephone != null">
                    telephone = #{item.telephone},
                </if>
                <if test="item.name != null">
                    name = #{item.name}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>

    <!-- 根据主键删除 -->
    <delete id="deleteProductOrderById" parameterType="long">
        DELETE FROM product_order WHERE id = #{id}
    </delete>

    <!-- 根据主键批量删除 -->
    <delete id="deleteProductOrderByIds" parameterType="list">
        DELETE FROM product_order WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>